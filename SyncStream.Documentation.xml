<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SyncStream.Documentation</name>
    </assembly>
    <members>
        <member name="T:SyncStream.Documentation.Attribute.CodeExampleAttribute">
            <summary>
                This class maintains the structure of our code example documentation attribute
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.Attribute.CodeExampleAttribute.Language">
            <summary>
                This property contains the tag name to use
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.Attribute.CodeExampleAttribute.Path">
            <summary>
                This property contains the file path to the code example
            </summary>
        </member>
        <member name="P:SyncStream.Documentation.Attribute.CodeExampleAttribute.PathIsAbsolute">
            <summary>
                This property denotes whether or not the path is an absolute path
            </summary>
        </member>
        <member name="M:SyncStream.Documentation.Attribute.CodeExampleAttribute.#ctor(System.String,System.String)">
            <summary>
                This method instantiates our attribute with a language and file path
            </summary>
            <param name="language">The language the example is written in</param>
            <param name="filePath">The path to the file</param>
        </member>
        <member name="T:SyncStream.Documentation.Attribute.DocumentationIgnoreAttribute">
            <summary>
                This class maintains the attribute structure of a property that should be ignored in the documentation
            </summary>
        </member>
        <member name="T:SyncStream.Documentation.Attribute.HttpAcceptAttribute">
            <summary>
                This class maintains our acceptable request payloads and types attribute
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.Attribute.HttpAcceptAttribute.ContentTypes">
            <summary>
                This property contains the content types that are accepted
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.Attribute.HttpAcceptAttribute.Type">
            <summary>
                This property contains the request body type
            </summary>
        </member>
        <member name="M:SyncStream.Documentation.Attribute.HttpAcceptAttribute.#ctor(System.Type,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                This method instantiates the attribute with an acceptable <paramref name="type" /> as well as valid <paramref name="contentTypes" />
            </summary>
            <param name="type">The type that is accepted by the endpoint</param>
            <param name="contentTypes">The content-type values the <paramref name="type" /> is valid for</param>
        </member>
        <member name="M:SyncStream.Documentation.Attribute.HttpAcceptAttribute.#ctor(System.Type,System.String[])">
            <summary>
                This method instantiates the attribute with an acceptable <paramref name="type" /> as well as valid <paramref name="contentTypes" />
            </summary>
            <param name="type">The type that is accepted by the endpoint</param>
            <param name="contentTypes">The content-type values the <paramref name="type" /> is valid for</param>
        </member>
        <member name="T:SyncStream.Documentation.Attribute.MarkdownDocumentationAttribute">
            <summary>
                This class maintains the structure of our Documentation Markdown attribute
                which provides a way to tag a class or section to a tag name with documentation
                contained in a Markdown file.
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.Attribute.MarkdownDocumentationAttribute.Path">
            <summary>
                This property contains the path to the markdown file
            </summary>
        </member>
        <member name="P:SyncStream.Documentation.Attribute.MarkdownDocumentationAttribute.PathIsAbsolute">
            <summary>
                This property denotes whether the path to the markdown file is absolute or not
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.Attribute.MarkdownDocumentationAttribute.Tag">
            <summary>
                This property contains the name of the tag to associate the description with
            </summary>
        </member>
        <member name="M:SyncStream.Documentation.Attribute.MarkdownDocumentationAttribute.#ctor(System.String,System.String)">
            <summary>
                This method instantiates our attribute with a tag name and path to the markdown file
            </summary>
            <param name="filePath">The file path to the markdown documentation</param>
            <param name="tagName">The tag name the description belongs to</param>
        </member>
        <member name="T:SyncStream.Documentation.Attribute.RequiredIfAttribute">
            <summary>
                This class maintains our conditional requirement attribute
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.Attribute.RequiredIfAttribute.Description">
            <summary>
                This property contains the description of the requirement for documentation
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.Attribute.RequiredIfAttribute.ErrorMessage">
            <summary>
                This property contains an optional custom error message for the rule
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.Attribute.RequiredIfAttribute.MatchValue">
            <summary>
                This property contains the desired value to match for requirement
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.Attribute.RequiredIfAttribute.PropertyName">
            <summary>
                This property contains the name of the property whose value must be analyzed for requirement
            </summary>
        </member>
        <member name="M:SyncStream.Documentation.Attribute.RequiredIfAttribute.#ctor(System.String,System.Object,System.String,System.String)">
            <summary>
                This method instantiates the attribute with a property name
            </summary>
            <param name="propertyName">The property whose value must be analyzed for requirement</param>
            <param name="matchValue">The desired value to match for requirement</param>
            <param name="description">The description of the requirement for documentation</param>
            <param name="errorMessage">A custom error message to display</param>
        </member>
        <member name="M:SyncStream.Documentation.Attribute.RequiredIfAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
                This method validates the member according to the rules of this attribute
            </summary>
            <param name="value">The value to to validate</param>
            <param name="validationContext">The current validation context</param>
            <returns>The ValidationResult of the validation</returns>
        </member>
        <member name="M:SyncStream.Documentation.Attribute.RequiredIfAttribute.GenerateDescription(System.String,System.String)">
            <summary>
                This method generates the description of the conditional requirement for the documentation
            </summary>
            <param name="propertyName">The property name to attach the description to</param>
            <param name="targetName">The documentation property name to attach the description to</param>
            <returns>The generated description for the rule</returns>
        </member>
        <member name="M:SyncStream.Documentation.Attribute.RequiredIfAttribute.GenerateErrorMessage(System.String)">
            <summary>
                This method generates the error message for the conditional requirement
            </summary>
            <param name="propertyName">The property name to attach the error message to</param>
            <returns>The generated error message</returns>
        </member>
        <member name="T:SyncStream.Documentation.Attribute.RequiredIfInAttribute">
            <summary>
                This class maintains our conditional requirement attribute
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.Attribute.RequiredIfInAttribute.Description">
            <summary>
                This property contains the description of the requirement for documentation
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.Attribute.RequiredIfInAttribute.ErrorMessage">
            <summary>
                This property contains a custom error message for the rule
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.Attribute.RequiredIfInAttribute.MatchValues">
            <summary>
                This property contains the desired value to match for requirement
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.Attribute.RequiredIfInAttribute.PropertyName">
            <summary>
                This property contains the name of the property whose value must be analyzed for requirement
            </summary>
        </member>
        <member name="M:SyncStream.Documentation.Attribute.RequiredIfInAttribute.#ctor(System.String,System.Collections.Generic.List{System.Object},System.String,System.String)">
            <summary>
                This method instantiates the attribute with a property name
            </summary>
            <param name="propertyName">The property whose value must be analyzed for requirement</param>
            <param name="matchValues">The desired values to match for requirement</param>
            <param name="description">The description of the requirement for documentation</param>
            <param name="errorMessage">A custom error message to display</param>
        </member>
        <member name="M:SyncStream.Documentation.Attribute.RequiredIfInAttribute.#ctor(System.String,System.Object[])">
            <summary>
                This method instantiates the attribute with a property name
            </summary>
            <param name="propertyName">The property whose value must be analyzed for requirement</param>
            <param name="matchValues">The desired values to match for requirement</param>
        </member>
        <member name="M:SyncStream.Documentation.Attribute.RequiredIfInAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
                This method validates the member according to the rules of this attribute
            </summary>
            <param name="value">The value to to validate</param>
            <param name="validationContext">The current validation context</param>
            <returns>The ValidationResult of the validation</returns>
        </member>
        <member name="M:SyncStream.Documentation.Attribute.RequiredIfInAttribute.GenerateDescription(System.String,System.String)">
            <summary>
                This method generates the description of the conditional requirement for the documentation
            </summary>
            <param name="propertyName">The property name to attach the description to</param>
            <param name="targetName">The documentation property name to attach the description to</param>
            <returns>The generated description for the rule</returns>
        </member>
        <member name="M:SyncStream.Documentation.Attribute.RequiredIfInAttribute.GenerateErrorMessage(System.String)">
            <summary>
            This method generates the error message for the conditional requirement
            </summary>
            <param name="propertyName">The property name to attach the error message to</param>
            <returns>The generated error message</returns>
        </member>
        <member name="T:SyncStream.Documentation.Attribute.RequiredIfNotNullOrEmptyAttribute">
            <summary>
                This class maintains our conditional requirement attribute
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.Attribute.RequiredIfNotNullOrEmptyAttribute.Description">
            <summary>
                This property contains the description of the requirement for documentation
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.Attribute.RequiredIfNotNullOrEmptyAttribute.ErrorMessage">
            <summary>
                This property contains a custom error message for the rule
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.Attribute.RequiredIfNotNullOrEmptyAttribute.PropertyName">
            <summary>
                This property contains the name of the property whose value must be analyzed for requirement
            </summary>
        </member>
        <member name="M:SyncStream.Documentation.Attribute.RequiredIfNotNullOrEmptyAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
                This method instantiates the attribute with a property name
            </summary>
            <param name="propertyName">The property whose value must be analyzed for requirement</param>
            <param name="description">The description of the requirement for documentation</param>
            <param name="errorMessage">A custom error message to display</param>
        </member>
        <member name="M:SyncStream.Documentation.Attribute.RequiredIfNotNullOrEmptyAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
                This method validates the member according to the rules of this attribute
            </summary>
            <param name="value">The value to to validate</param>
            <param name="validationContext">The current validation context</param>
            <returns>The ValidationResult of the validation</returns>
        </member>
        <member name="M:SyncStream.Documentation.Attribute.RequiredIfNotNullOrEmptyAttribute.GenerateDescription(System.String,System.String)">
            <summary>
                This method generates the description of the conditional requirement for the documentation
            </summary>
            <param name="propertyName">The property name to attach the description to</param>
            <param name="targetName">The documentation property name to attach the description to</param>
            <returns>The generated description for the rule</returns>
        </member>
        <member name="M:SyncStream.Documentation.Attribute.RequiredIfNotNullOrEmptyAttribute.GenerateErrorMessage(System.String)">
            <summary>
            This method generates the error message for the conditional requirement
            </summary>
            <param name="propertyName">The property name to attach the error message to</param>
            <returns>The generated error message</returns>
        </member>
        <member name="T:SyncStream.Documentation.Attribute.RequiredIfNullOrEmptyAttribute">
            <summary>
                This class maintains our conditional requirement attribute
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.Attribute.RequiredIfNullOrEmptyAttribute.Description">
            <summary>
                This property contains the description of the requirement for documentation
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.Attribute.RequiredIfNullOrEmptyAttribute.ErrorMessage">
            <summary>
                This property contains a custom error message for the rule
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.Attribute.RequiredIfNullOrEmptyAttribute.PropertyName">
            <summary>
                This property contains the name of the property whose value must be analyzed for requirement
            </summary>
        </member>
        <member name="M:SyncStream.Documentation.Attribute.RequiredIfNullOrEmptyAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
                This method instantiates the attribute with a property name
            </summary>
            <param name="propertyName">The property whose value must be analyzed for requirement</param>
            <param name="description">The description of the requirement for documentation</param>
            <param name="errorMessage">A custom error message to display</param>
        </member>
        <member name="M:SyncStream.Documentation.Attribute.RequiredIfNullOrEmptyAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
                This method validates the member according to the rules of this attribute
            </summary>
            <param name="value">The value to to validate</param>
            <param name="validationContext">The current validation context</param>
            <returns>The ValidationResult of the validation</returns>
        </member>
        <member name="M:SyncStream.Documentation.Attribute.RequiredIfNullOrEmptyAttribute.GenerateDescription(System.String,System.String)">
            <summary>
                This method generates the description of the conditional requirement for the documentation
            </summary>
            <param name="propertyName">The property name to attach the description to</param>
            <param name="targetName">The documentation property name to attach the description to</param>
            <returns>The generated description for the rule</returns>
        </member>
        <member name="M:SyncStream.Documentation.Attribute.RequiredIfNullOrEmptyAttribute.GenerateErrorMessage(System.String)">
            <summary>
            This method generates the error message for the conditional requirement
            </summary>
            <param name="propertyName">The property name to attach the error message to</param>
            <returns>The generated error message</returns>
        </member>
        <member name="T:SyncStream.Documentation.Attribute.ReturnsAttribute">
            <summary>
                This class maintains the structure of our Returns attribute
                which allows the explicit defining of response types
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.Attribute.ReturnsAttribute.ContentTypes">
            <summary>
                This property contains the list of content types that are returned
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.Attribute.ReturnsAttribute.StatusCode">
            <summary>
                This property contains the HTTP status code the response is triggered on
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.Attribute.ReturnsAttribute.Type">
            <summary>
                This property contains the type of the response body
            </summary>
        </member>
        <member name="M:SyncStream.Documentation.Attribute.ReturnsAttribute.#ctor(System.Type,System.Int32,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                This method instantiates the attribute with a response body <paramref name="type" />,
                <paramref name="httpStatusCode"/> as well as <paramref name="contentTypes" />
            </summary>
            <param name="type">The expected type of the response body</param>
            <param name="httpStatusCode">The expected HTTP status code</param>
            <param name="contentTypes">The expected content types</param>
        </member>
        <member name="M:SyncStream.Documentation.Attribute.ReturnsAttribute.#ctor(System.Type,System.Int32,System.String[])">
            <summary>
                This method instantiates the attribute with a response body <paramref name="type" />,
                <paramref name="httpStatusCode" /> as well as <paramref name="contentTypes" />
            </summary>
            <param name="type">The expected type of the response body</param>
            <param name="httpStatusCode">The expected HTTP status code</param>
            <param name="contentTypes">The expected content types</param>
        </member>
        <member name="T:SyncStream.Documentation.Configuration.DocumentationConfiguration">
            <summary>
                This class maintains the configuration values for the SyncStream.Documentation library
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.Configuration.DocumentationConfiguration._host">
            <summary>
                This property contains the default host and protocol
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.Configuration.DocumentationConfiguration._path">
            <summary>
                This property contains the path Swagger/ReDoc will be accessible at
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.Configuration.DocumentationConfiguration._reDocIndexHtml">
            <summary>
                This property contains the default ReDoc index.html content
            </summary>
        </member>
        <member name="P:SyncStream.Documentation.Configuration.DocumentationConfiguration.DocumentationIndex">
            <summary>
                This property contains the file path or HTML for the ReDoc index
            </summary>
        </member>
        <member name="P:SyncStream.Documentation.Configuration.DocumentationConfiguration.HostUrl">
            <summary>
                This property contains the host url where Swagger and ReDoc will live
            </summary>
        </member>
        <member name="P:SyncStream.Documentation.Configuration.DocumentationConfiguration.IncludeXmlComments">
            <summary>
                This property denotes whether to include the application's XML comments or not
            </summary>
        </member>
        <member name="P:SyncStream.Documentation.Configuration.DocumentationConfiguration.License">
            <summary>
                This property contains the software license
            </summary>
        </member>
        <member name="P:SyncStream.Documentation.Configuration.DocumentationConfiguration.Logo">
            <summary>
                This property contains the URL or file path to the URL
            </summary>
        </member>
        <member name="P:SyncStream.Documentation.Configuration.DocumentationConfiguration.RoutePrefix">
            <summary>
                This property contains the route prefix for the ReDoc documentation route
            </summary>
        </member>
        <member name="P:SyncStream.Documentation.Configuration.DocumentationConfiguration.TermsOfService">
            <summary>
                This property contains the URL to the terms of service for the application
            </summary>
        </member>
        <member name="P:SyncStream.Documentation.Configuration.DocumentationConfiguration.Title">
            <summary>
                This property contains the application title to be displayed for the documentation
            </summary>
        </member>
        <member name="P:SyncStream.Documentation.Configuration.DocumentationConfiguration.Version">
            <summary>
                This property contains the version of the API
            </summary>
        </member>
        <member name="M:SyncStream.Documentation.Configuration.DocumentationConfiguration.GetFullPath">
            <summary>
                This method returns the full path to the Swagger YAML file
            </summary>
            <returns>The full path to the Swagger YAML file</returns>
        </member>
        <member name="M:SyncStream.Documentation.Configuration.DocumentationConfiguration.GetFullUrl(System.Uri)">
            <summary>
                This method returns the full URL to the Swagger YAML file
            </summary>
            <param name="hostUrl">Optional, host URL override</param>
            <returns>The full URL to the Swagger YAML file</returns>
        </member>
        <member name="M:SyncStream.Documentation.Configuration.DocumentationConfiguration.GetLicenseUrl">
            <summary>
                This method returns the full license url of the application
            </summary>
            <returns>The full URL to the application's license</returns>
        </member>
        <member name="M:SyncStream.Documentation.Configuration.DocumentationConfiguration.GetLicenseUrlOpenApi">
            <summary>
                This method returns the full license url of the application as an OpenAPI schema
            </summary>
            <returns>The OpenAPI schema containing the full license url of the application</returns>
        </member>
        <member name="M:SyncStream.Documentation.Configuration.DocumentationConfiguration.GetPath(System.String)">
            <summary>
                This method sanitizes a <paramref name="path" /> for URL generation
            </summary>
            <param name="path">The path to sanitize</param>
            <returns>The sanitized <paramref name="path" /></returns>
        </member>
        <member name="M:SyncStream.Documentation.Configuration.DocumentationConfiguration.GetPath">
            <summary>
                This method returns the path to the Swagger UI
            </summary>
            <returns>The path to the Swagger UI</returns>
        </member>
        <member name="M:SyncStream.Documentation.Configuration.DocumentationConfiguration.GetReDocIndex">
            <summary>
                This method returns the ReDoc UI index HTML for the application
            </summary>
            <returns>The ReDoc UI index HTML for the application</returns>
        </member>
        <member name="M:SyncStream.Documentation.Configuration.DocumentationConfiguration.GetTitle">
            <summary>
                This method returns a title for the application
            </summary>
            <returns>The application's title</returns>
        </member>
        <member name="M:SyncStream.Documentation.Configuration.DocumentationConfiguration.GetUrl(System.String,System.String)">
            <summary>
                This method sanitizes the <paramref name="hostPart" /> and <paramref name="pathPart" /> then generates an absolute URL
            </summary>
            <param name="hostPart">The host and protocol to sanitize</param>
            <param name="pathPart">The path and query string to sanitize</param>
            <returns>The sanitized absolute URL: <code><paramref name="hostPart" />/<paramref name="pathPart" /></code></returns>
        </member>
        <member name="M:SyncStream.Documentation.Configuration.DocumentationConfiguration.GetUrl(System.Uri)">
            <summary>
                This method returns the full URL to the Swagger UI
            </summary>
            <param name="hostUrl">Optional, host URL override</param>
            <returns>The full URL to the Swagger UI</returns>
        </member>
        <member name="M:SyncStream.Documentation.Configuration.DocumentationConfiguration.GetVersion">
            <summary>
                This method returns a version for the application
            </summary>
            <returns>The version of the application</returns>
        </member>
        <member name="T:SyncStream.Documentation.DocumentationLicense">
            <summary>
                This enum defines our license enum values
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.DocumentationLicense.Apache20">
            <summary>
                This enum value defines the Apache 2.0 License
            </summary>
            <returns></returns>
        </member>
        <member name="F:SyncStream.Documentation.DocumentationLicense.Bsd2Clause">
            <summary>
                This enum value defines the BSD 2-Clause "Simplified" or "FreeBSD" license
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.DocumentationLicense.Bsd3Clause">
            <summary>
                This enum value defines the BSD 3-Clause "New" or "Revised" license
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.DocumentationLicense.CDDL10">
            <summary>
                This enum value defines the Common Development and Distribution License
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.DocumentationLicense.EPL20">
            <summary>
                This enum value defines the Eclipse Public License version 2.0 license
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.DocumentationLicense.GPL">
            <summary>
                This enum value defines the GNU General Public License (GPL) license
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.DocumentationLicense.LGPL">
            <summary>
                This enum value defines the GNU Library or "Lesser" General Public License (LGPL) license
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.DocumentationLicense.MIT">
            <summary>
                This enum value defines the MIT license
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.DocumentationLicense.MPL20">
            <summary>
                This enum value defines the Mozilla Public License 2.0 license
            </summary>
        </member>
        <member name="F:SyncStream.Documentation.DocumentationLicense.Proprietary">
            <summary>
                This enum value defines a proprietary license
            </summary>
        </member>
        <member name="T:SyncStream.Documentation.Extensions.SyncStreamDocumentationApplicationBuilderExtensions">
            <summary>
                This class maintains our IApplicationBuilder extensions for SyncStream.Documentation
            </summary>
        </member>
        <member name="M:SyncStream.Documentation.Extensions.SyncStreamDocumentationApplicationBuilderExtensions.UseSyncStreamDocumentation(Microsoft.AspNetCore.Builder.IApplicationBuilder,SyncStream.Documentation.Configuration.DocumentationConfiguration)">
            <summary>
                This method sets up Swagger/ReDoc for an application
            </summary>
            <param name="instance">The current instance of IApplicationBuilder</param>
            <param name="configuration">The configuration values for the documentation</param>
            <returns><paramref name="instance" /></returns>
        </member>
        <member name="T:SyncStream.Documentation.Extensions.SyncStreamDocumentationLicenseExtensions">
            <summary>
                This class maintains the DocumentationLicense enum extensions
            </summary>
        </member>
        <member name="M:SyncStream.Documentation.Extensions.SyncStreamDocumentationLicenseExtensions.ToUrl(SyncStream.Documentation.DocumentationLicense)">
            <summary>
                This method converts a documentation license to a URL
            </summary>
            <param name="value">The documentation license enum</param>
            <returns>The URL to the license</returns>
        </member>
        <member name="T:SyncStream.Documentation.Extensions.SyncStreamDocumentationServiceCollectionExtensions">
            <summary>
                This class maintains the structure of our IServiceCollection extensions for SyncStream.Documentation
            </summary>
        </member>
        <member name="M:SyncStream.Documentation.Extensions.SyncStreamDocumentationServiceCollectionExtensions.AddSyncStreamDocumentationExample``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                This method configures the <paramref name="instance" /> with a documentation example for <typeparamref name="TExample" />
            </summary>
            <param name="instance">The current IServiceCollection instance</param>
            <typeparam name="TExample">The expected type of the example to use</typeparam>
            <returns><paramref name="instance" /></returns>
        </member>
        <member name="M:SyncStream.Documentation.Extensions.SyncStreamDocumentationServiceCollectionExtensions.UseSyncStreamDocumentation(Microsoft.Extensions.DependencyInjection.IServiceCollection,SyncStream.Documentation.Configuration.DocumentationConfiguration,System.String,System.String,System.Action{Swashbuckle.AspNetCore.SwaggerGen.SwaggerGenOptions})">
            <summary>
                This method configures the <paramref name="instance" /> with Swagger and ReDoc
            </summary>
            <param name="instance">The current IServiceCollection instance</param>
            <param name="configuration">The documentation configuration values</param>
            <param name="xmlDocumentationFile">Optional, XML documentation file to include with Swagger/ReDoc</param>
            <param name="markdownDescription">Optional, filepath or raw markdown to be used for the main description</param>
            <param name="swaggerConfigurator">Optional, action so the caller can also configure swagger</param>
            <returns><paramref name="instance" /></returns>
        </member>
        <member name="T:SyncStream.Documentation.Extensions.SyncStreamDocumentationSystemTypeExtensions">
            <summary>
                This class maintains the extension structure of our System.Type
            </summary>
        </member>
        <member name="M:SyncStream.Documentation.Extensions.SyncStreamDocumentationSystemTypeExtensions.IsSubclassOfGeneric(System.Type,System.Type)">
            <summary>
                This method determines whether or not a class inherits a generic class or not
            </summary>
            <param name="instance">The current type</param>
            <param name="target">The target type</param>
            <returns>A boolean denoting truth</returns>
        </member>
        <member name="T:SyncStream.Documentation.Filters.Document.MarkdownDocumentationDocumentFilter">
            <summary>
                This class maintains the structure of our document filter
                which provides Markdown loading for the describing endpoint groups/sections/tags
            </summary>
        </member>
        <member name="M:SyncStream.Documentation.Filters.Document.MarkdownDocumentationDocumentFilter.Apply(Microsoft.OpenApi.Models.OpenApiDocument,Swashbuckle.AspNetCore.SwaggerGen.DocumentFilterContext)">
            <summary>
                This method looks for documentation files for API sections
            </summary>
            <param name="document">The current api explorer document</param>
            <param name="context">The current api explorer context</param>
        </member>
        <member name="T:SyncStream.Documentation.Filters.FilterWithExampleGenerator">
            <summary>
                This class provides a base for filters that generate examples
            </summary>
        </member>
        <member name="M:SyncStream.Documentation.Filters.FilterWithExampleGenerator.InstantiateObject(System.Type)">
            <summary>
                This method dynamically instantiates an example <paramref name="type" /> object
            </summary>
            <param name="type">The type to instantiate</param>
            <returns>The example object of <paramref name="type" /></returns>
        </member>
        <member name="M:SyncStream.Documentation.Filters.FilterWithExampleGenerator.JsonExample(System.Type,System.Object)">
            <summary>
                This method generates a JSON example for a content item in the response
            </summary>
            <param name="type">The type to instantiate and generate an example of</param>
            <param name="instance">Existing instance of <paramref name="type" /> object</param>
            <returns>The JSON representation of <paramref name="type" /></returns>
        </member>
        <member name="M:SyncStream.Documentation.Filters.FilterWithExampleGenerator.XmlExample(System.Type,System.Object)">
            <summary>
                This method generates an XML example for a content item in the response
            </summary>
            <param name="type">The type to instantiate and generate an example of</param>
            <param name="instance">Existing instance of <paramref name="type" /> object</param>
            <returns>The XML representation of <paramref name="type" /></returns>
        </member>
        <member name="T:SyncStream.Documentation.Filters.Operation.CodeExampleOperationFilter">
            <summary>
                This class maintains the operation filter structure for
                adding code examples to the Swagger documentation
            </summary>
        </member>
        <member name="M:SyncStream.Documentation.Filters.Operation.CodeExampleOperationFilter.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
                This method applies our filter
            </summary>
            <param name="operation">The current operation</param>
            <param name="context">The current context</param>
        </member>
        <member name="T:SyncStream.Documentation.Filters.Operation.DisplayNameOperationFilter">
            <summary>
                This class maintains the Swagger endpoint documentation filter
                for generating relative documentation to the request payload
            </summary>
        </member>
        <member name="M:SyncStream.Documentation.Filters.Operation.DisplayNameOperationFilter.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
                This method applies the filter to method with an Accepts attribute
            </summary>
            <param name="operation"></param>
            <param name="context"></param>
        </member>
        <member name="T:SyncStream.Documentation.Filters.Operation.MarkdownDocumentationOperationFilter">
            <summary>
            This class maintains the structure of our markdown documentation filter
            which checks operation descriptions for file notation and then loads the
            markdown file into the operation's description
            </summary>
        </member>
        <member name="M:SyncStream.Documentation.Filters.Operation.MarkdownDocumentationOperationFilter.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
                This method applies the operation
            </summary>
            <param name="operation">The current api-explorer operation</param>
            <param name="context">The current api-explorer filter context</param>
        </member>
        <member name="T:SyncStream.Documentation.Filters.Operation.ReturnsOperationFilter">
            <summary>
                This class maintains the Swagger endpoint documentation filter
                for generating relative documentation to the response payload
            </summary>
        </member>
        <member name="M:SyncStream.Documentation.Filters.Operation.ReturnsOperationFilter.ProcessResponse(System.String,System.Type,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
                This method processes a content item into the responses of the endpoint
            </summary>
            <param name="contentType">The available content-type for the response</param>
            <param name="type">The object type of the response</param>
            <param name="context">The current filter context</param>
            <returns>The OpenAPI media type definition</returns>
        </member>
        <member name="M:SyncStream.Documentation.Filters.Operation.ReturnsOperationFilter.ProcessResponse(SyncStream.Documentation.Attribute.ReturnsAttribute,Microsoft.OpenApi.Models.OpenApiResponses,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
                This method processes the responses from the Return attribute classes
            </summary>
            <param name="attribute">The attribute explicitly defining the responses</param>
            <param name="responses">The current OpenAPI response objects</param>
            <param name="context">The current OpenAPI filter context</param>
        </member>
        <member name="M:SyncStream.Documentation.Filters.Operation.ReturnsOperationFilter.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
                This method applies our filter in the <paramref name="context" /> to the <paramref name="operation" />
            </summary>
            <param name="operation">The OpenAPI operation to apply the filter to</param>
            <param name="context">The current OpenAPI filter context</param>
        </member>
        <member name="T:SyncStream.Documentation.Filters.Schema.DocumentationIgnoreSchemaFilter">
            <summary>
                This class maintains the schema filter structure of our ignored properties in the generated documentation
            </summary>
        </member>
        <member name="M:SyncStream.Documentation.Filters.Schema.DocumentationIgnoreSchemaFilter.Apply(Microsoft.OpenApi.Models.OpenApiSchema,Swashbuckle.AspNetCore.SwaggerGen.SchemaFilterContext)">
             <summary>
            
             </summary>
             <param name="schema"></param>
             <param name="context"></param>
        </member>
        <member name="T:SyncStream.Documentation.Filters.Schema.RequiredIfInSchemaFilter">
            <summary>
                This class maintains the structure for our conditional requirement attribute
            </summary>
        </member>
        <member name="M:SyncStream.Documentation.Filters.Schema.RequiredIfInSchemaFilter.Apply(Microsoft.OpenApi.Models.OpenApiSchema,Swashbuckle.AspNetCore.SwaggerGen.SchemaFilterContext)">
            <summary>
                This method applies the filter to the <paramref name="schema" />
            </summary>
            <param name="schema">The schema to apply this filter to</param>
            <param name="context">The current OpenAPI SchemaFilterContext instance</param>
        </member>
        <member name="T:SyncStream.Documentation.Filters.Schema.RequiredIfNotNullOrEmptySchemaFilter">
            <summary>
                This class maintains the structure for our conditional requirement attribute
            </summary>
        </member>
        <member name="M:SyncStream.Documentation.Filters.Schema.RequiredIfNotNullOrEmptySchemaFilter.Apply(Microsoft.OpenApi.Models.OpenApiSchema,Swashbuckle.AspNetCore.SwaggerGen.SchemaFilterContext)">
            <summary>
                This method applies the filter to the <paramref name="schema" />
            </summary>
            <param name="schema">The schema to apply this filter to</param>
            <param name="context">The current OpenAPI SchemaFilterContext instnce</param>
        </member>
        <member name="T:SyncStream.Documentation.Filters.Schema.RequiredIfNullOrEmptySchemaFilter">
            <summary>
                This class maintains the structure for our conditional requirement attribute
            </summary>
        </member>
        <member name="M:SyncStream.Documentation.Filters.Schema.RequiredIfNullOrEmptySchemaFilter.Apply(Microsoft.OpenApi.Models.OpenApiSchema,Swashbuckle.AspNetCore.SwaggerGen.SchemaFilterContext)">
            <summary>
                This method applies the filter to the <paramref name="schema" />
            </summary>
            <param name="schema">The schema to apply this filter to</param>
            <param name="context">The current OpenAPI SchemaFilterContext instance</param>
        </member>
        <member name="T:SyncStream.Documentation.Filters.Schema.RequiredIfSchemaFilter">
            <summary>
                This class maintains the structure for our conditional requirement attribute
            </summary>
        </member>
        <member name="M:SyncStream.Documentation.Filters.Schema.RequiredIfSchemaFilter.Apply(Microsoft.OpenApi.Models.OpenApiSchema,Swashbuckle.AspNetCore.SwaggerGen.SchemaFilterContext)">
            <summary>
                This method applies the filter to the <paramref name="schema" />
            </summary>
            <param name="schema">The schema to apply this filter to</param>
            <param name="context">The current OpenAPI SchemaFilterContext instance</param>
        </member>
        <member name="T:SyncStream.Documentation.Model.ExampleProvider`1">
            <summary>
                This class maintains the structure of an object with an example provider
            </summary>
            <typeparam name="TSource">The expected type of the example</typeparam>
        </member>
        <member name="M:SyncStream.Documentation.Model.ExampleProvider`1.GetExample">
            <summary>
                This method generates and returns an example object of <typeparamref name="TSource" />
            </summary>
            <returns>The example <typeparamref name="TSource" /> object</returns>
        </member>
        <member name="M:SyncStream.Documentation.Model.ExampleProvider`1.GetExamples">
            <summary>
                This method generates and returns an example object of <typeparamref name="TSource" />
            </summary>
            <returns>The example <typeparamref name="TSource" /> object</returns>
        </member>
        <member name="T:SyncStream.Documentation.Model.IExampleProvider`1">
            <summary>
                This interface maintains the structure of an object with an example provider
            </summary>
            <typeparam name="TSource">The expected type of the example</typeparam>
        </member>
        <member name="M:SyncStream.Documentation.Model.IExampleProvider`1.GetExample">
            <summary>
                This method generates and returns an example object of <typeparamref name="TSource" />
            </summary>
            <returns>The example <typeparamref name="TSource" /> object</returns>
        </member>
        <member name="M:SyncStream.Documentation.Model.IExampleProvider`1.GetExamples">
            <summary>
                This method generates and returns an example object of <typeparamref name="TSource" />
            </summary>
            <returns>The example <typeparamref name="TSource" /> object</returns>
        </member>
    </members>
</doc>
